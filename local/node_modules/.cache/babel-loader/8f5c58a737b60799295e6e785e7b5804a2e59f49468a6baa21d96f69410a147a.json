{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work kmutnb\\\\project final\\\\project-rfid\\\\local\\\\src\\\\components\\\\RFIDCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RFIDCounter = () => {\n  _s();\n  const [tagCount, setTagCount] = useState(0);\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:3000/sse');\n    eventSource.onmessage = event => {\n      const rfidTags = JSON.parse(event.data);\n      console.log('Received RFID Tags:', rfidTags);\n      setTagCount(rfidTags.length);\n    };\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"RFID Tag Count: \", tagCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(RFIDCounter, \"yTrS58ZSWBSCcRcxx7xMRAX8CS0=\");\n_c = RFIDCounter;\nexport default RFIDCounter;\nvar _c;\n$RefreshReg$(_c, \"RFIDCounter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RFIDCounter","_s","tagCount","setTagCount","eventSource","EventSource","onmessage","event","rfidTags","JSON","parse","data","console","log","length","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Work kmutnb/project final/project-rfid/local/src/components/RFIDCounter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst RFIDCounter = () => {\r\n  const [tagCount, setTagCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const eventSource = new EventSource('http://localhost:3000/sse');\r\n\r\n    eventSource.onmessage = (event) => {\r\n      const rfidTags = JSON.parse(event.data);\r\n      console.log('Received RFID Tags:', rfidTags);\r\n      setTagCount(rfidTags.length);\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>RFID Tag Count: {tagCount}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RFIDCounter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMO,WAAW,GAAG,IAAIC,WAAW,CAAC,2BAA2B,CAAC;IAEhED,WAAW,CAACE,SAAS,GAAIC,KAAK,IAAK;MACjC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEL,QAAQ,CAAC;MAC5CL,WAAW,CAACK,QAAQ,CAACM,MAAM,CAAC;IAC9B,CAAC;IAED,OAAO,MAAM;MACXV,WAAW,CAACW,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAAiB,QAAA,GAAI,kBAAgB,EAACd,QAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtBID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}