{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work kmutnb\\\\project final\\\\project-rfid\\\\local\\\\src\\\\components\\\\RFIDCounter.js\",\n  _s = $RefreshSig$();\n// src/components/RFIDCounter.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RFIDCounter = () => {\n  _s();\n  const [tagSet, setTagSet] = useState(new Set());\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/rfid');\n        const rfidTags = response.data;\n        const uniqueTags = new Set(rfidTags);\n        setTagSet(prevTags => new Set([...prevTags, ...uniqueTags])); // เพิ่มเฉพาะ tag ที่ไม่ซ้ำกับที่เคยนับมาแล้ว\n      } catch (error) {\n        console.error('Error fetching RFID tags:', error);\n      }\n    };\n    const intervalId = setInterval(fetchData, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"RFID Tag Count: \", tagSet.size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.from(tagSet).map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(RFIDCounter, \"lY1hSkpdCnCZj4qqoHPLYr6+9AM=\");\n_c = RFIDCounter;\nexport default RFIDCounter;\nvar _c;\n$RefreshReg$(_c, \"RFIDCounter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RFIDCounter","_s","tagSet","setTagSet","Set","fetchData","response","get","rfidTags","data","uniqueTags","prevTags","error","console","intervalId","setInterval","clearInterval","children","size","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","map","tag","_c","$RefreshReg$"],"sources":["D:/Work kmutnb/project final/project-rfid/local/src/components/RFIDCounter.js"],"sourcesContent":["// src/components/RFIDCounter.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RFIDCounter = () => {\r\n  const [tagSet, setTagSet] = useState(new Set());\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/rfid');\r\n        const rfidTags = response.data;\r\n        const uniqueTags = new Set(rfidTags);\r\n        setTagSet((prevTags) => new Set([...prevTags, ...uniqueTags])); // เพิ่มเฉพาะ tag ที่ไม่ซ้ำกับที่เคยนับมาแล้ว\r\n      } catch (error) {\r\n        console.error('Error fetching RFID tags:', error);\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(fetchData, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>RFID Tag Count: {tagSet.size}</h1>\r\n      <ul>\r\n        {Array.from(tagSet).map((tag) => (\r\n          <li key={tag}>{tag}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RFIDCounter;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAIS,GAAG,CAAC,CAAC,CAAC;EAE/CR,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,OAAO,CAAC;QACzC,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI;QAC9B,MAAMC,UAAU,GAAG,IAAIN,GAAG,CAACI,QAAQ,CAAC;QACpCL,SAAS,CAAEQ,QAAQ,IAAK,IAAIP,GAAG,CAAC,CAAC,GAAGO,QAAQ,EAAE,GAAGD,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MAClE,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAED,MAAME,UAAU,GAAGC,WAAW,CAACV,SAAS,EAAE,IAAI,CAAC;IAE/C,OAAO,MAAM;MACXW,aAAa,CAACF,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,GAAI,kBAAgB,EAACf,MAAM,CAACgB,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtCvB,OAAA;MAAAkB,QAAA,EACGM,KAAK,CAACC,IAAI,CAACtB,MAAM,CAAC,CAACuB,GAAG,CAAEC,GAAG,iBAC1B3B,OAAA;QAAAkB,QAAA,EAAeS;MAAG,GAATA,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}