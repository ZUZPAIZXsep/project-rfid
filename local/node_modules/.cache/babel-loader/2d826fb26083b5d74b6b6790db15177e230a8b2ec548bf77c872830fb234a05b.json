{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work kmutnb\\\\project final\\\\project-rfid\\\\local\\\\src\\\\components\\\\RFIDCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RFIDCounter = () => {\n  _s();\n  const [tagCount, setTagCount] = useState(0);\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:3000/sse'); // EventSource endpoint ของ Express server\n\n    eventSource.onmessage = event => {\n      const rfidTags = JSON.parse(event.data);\n      setTagCount(new Set(rfidTags).size); // ใช้ Set เพื่อนับ id tags ที่ไม่ซ้ำ\n    };\n\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RFID Tag Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of Unique RFID Tags: \", tagCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(RFIDCounter, \"yTrS58ZSWBSCcRcxx7xMRAX8CS0=\");\n_c = RFIDCounter;\nexport default RFIDCounter;\nvar _c;\n$RefreshReg$(_c, \"RFIDCounter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RFIDCounter","_s","tagCount","setTagCount","eventSource","EventSource","onmessage","event","rfidTags","JSON","parse","data","Set","size","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Work kmutnb/project final/project-rfid/local/src/components/RFIDCounter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RFIDCounter = () => {\r\n  const [tagCount, setTagCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const eventSource = new EventSource('http://localhost:3000/sse'); // EventSource endpoint ของ Express server\r\n\r\n    eventSource.onmessage = (event) => {\r\n      const rfidTags = JSON.parse(event.data);\r\n      setTagCount(new Set(rfidTags).size); // ใช้ Set เพื่อนับ id tags ที่ไม่ซ้ำ\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>RFID Tag Counter</h1>\r\n      <p>Number of Unique RFID Tags: {tagCount}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RFIDCounter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,IAAIC,WAAW,CAAC,2BAA2B,CAAC,CAAC,CAAC;;IAElED,WAAW,CAACE,SAAS,GAAIC,KAAK,IAAK;MACjC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACvCR,WAAW,CAAC,IAAIS,GAAG,CAACJ,QAAQ,CAAC,CAACK,IAAI,CAAC,CAAC,CAAC;IACvC,CAAC;;IAED,OAAO,MAAM;MACXT,WAAW,CAACU,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA;MAAAgB,QAAA,GAAG,8BAA4B,EAACb,QAAQ;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtBID,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}